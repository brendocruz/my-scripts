#!/usr/bin/env python3
import os
import sys
import argparse

sys.path.append(os.path.join(os.path.dirname(os.path.realpath(__file__)), './../../'))
from src.commands.gensinglecolorimage import GenerateSingleColorImage

description    = 'Generate an image with a single solid color.'
help_color     = 'The color of the image, can be a keyword (like `red`) or hexadecimal.'
help_width     = 'The width of the image.'
help_height    = 'The height of the image.'
help_ouptut    = 'The filename of the output image containing the file extension.'
help_overwrite = 'If the output image can overwrite an existing one.'
help_help      = 'Show this help message and exit.'

parse = argparse.ArgumentParser(description=description, add_help=False)
parse.add_argument('color',
                   type=str,
                   help=help_color)
parse.add_argument('-w', '--width',
                   type=int,
                   required=True,
                   help=help_width)
parse.add_argument('-h', '--height',
                   type=int,
                   required=True,
                   help=help_height)
parse.add_argument('-o', '--output',
                   type=str,
                   default='output.png',
                   dest='outfile',
                   help=help_ouptut)
parse.add_argument('-O', '--overwrite',
                   type=bool,default=False,
                   help=help_overwrite)
parse.add_argument('--help',
                   action='help',
                   help=help_help)


def main():
    args = parse.parse_args()
    GenerateSingleColorImage(**vars(args)).run()


if __name__ == '__main__':
    main()
